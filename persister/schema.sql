
CREATE TABLE IF NOT EXISTS codebase
(
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    repo_url TEXT COLLATE RTRIM NOT NULL,
    UNIQUE (repo_url) ON CONFLICT FAIL
);

CREATE TABLE IF NOT EXISTS survey
(
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT FAIL,
    codebase_id INTEGER NOT NULL ON CONFLICT FAIL,
    local_dir TEXT COLLATE RTRIM NOT NULL ON CONFLICT FAIL,
    timestamp TEXT DEFAULT CURRENT_TIMESTAMP NOT NULL ON CONFLICT FAIL,
    FOREIGN KEY (codebase_id) REFERENCES codebase(id) ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS file
(
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT FAIL,
    survey_id INTEGER NOT NULL ON CONFLICT FAIL,
    filepath TEXT COLLATE RTRIM NOT NULL ON CONFLICT FAIL,
    UNIQUE (survey_id,filepath) ON CONFLICT FAIL,
    FOREIGN KEY (survey_id) REFERENCES survey(id) ON DELETE CASCADE ON UPDATE NO ACTION

);

CREATE TABLE IF NOT EXISTS symbol_type
(
    id INTEGER PRIMARY KEY NOT NULL ON CONFLICT FAIL,
    name TEXT COLLATE RTRIM NOT NULL ON CONFLICT FAIL
);


CREATE TABLE IF NOT EXISTS type
(
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT FAIL,
    file_id INTEGER NOT NULL ON CONFLICT FAIL,
    symbol_type_id INTEGER NOT NULL ON CONFLICT FAIL,
    name TEXT COLLATE RTRIM NOT NULL ON CONFLICT FAIL,
    definition TEXT COLLATE RTRIM NOT NULL ON CONFLICT FAIL,
    FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE ON UPDATE NO ACTION,
    FOREIGN KEY (symbol_type_id) REFERENCES symbol_type(id) ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS import
(
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT FAIL,
    file_id INTEGER NOT NULL ON CONFLICT FAIL,
    package TEXT COLLATE RTRIM NOT NULL ON CONFLICT FAIL,
    alias TEXT COLLATE RTRIM NOT NULL ON CONFLICT FAIL,
    name AS (CASE WHEN IFNULL(alias,'')=='' THEN json_extract('["'||replace(package,'/','","')||'"]','$[#-1]') ELSE alias END),
    UNIQUE (file_id,package,alias) ON CONFLICT FAIL,
    FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS variable
(
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT FAIL,
    name TEXT COLLATE RTRIM NOT NULL ON CONFLICT FAIL,
    type_id INTEGER NOT NULL ON CONFLICT FAIL,
    usage INTEGER NOT NULL ON CONFLICT FAIL,
    is_param AS (CASE WHEN usage = 1 THEN 1 ELSE 0 END),
    is_result AS (CASE WHEN usage = 2 THEN 1 ELSE 0 END),
    FOREIGN KEY (type_id) REFERENCES type(id) ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS method
(
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT FAIL,
    name TEXT COLLATE RTRIM NOT NULL ON CONFLICT FAIL,
    params TEXT COLLATE RTRIM NOT NULL ON CONFLICT FAIL,
    results TEXT COLLATE RTRIM NOT NULL ON CONFLICT FAIL,
    type_id INTEGER NOT NULL ON CONFLICT FAIL,
    FOREIGN KEY (type_id) REFERENCES type(id) ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS category
(
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT FAIL,
    name TEXT COLLATE RTRIM NOT NULL ON CONFLICT FAIL
);

CREATE TABLE IF NOT EXISTS category_type
(
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT FAIL,
    name TEXT COLLATE RTRIM NOT NULL ON CONFLICT FAIL,
    type_id INTEGER NOT NULL ON CONFLICT FAIL,
    category_id INTEGER NOT NULL ON CONFLICT FAIL,
    FOREIGN KEY (type_id) REFERENCES type(id) ON DELETE CASCADE ON UPDATE NO ACTION,
    FOREIGN KEY (category_id) REFERENCES type(id) ON DELETE CASCADE ON UPDATE NO ACTION
);


