// Code generated by ifacemaker; DO NOT EDIT.

package persister

import (
	"context"
)

// DataStoreQueries ...
type DataStoreQueries interface {
	DeleteCategory(ctx context.Context, id int64) error
	DeleteCodebase(ctx context.Context, id int64) error
	DeleteCodebaseByProjectIdAndVersionTag(ctx context.Context, arg DeleteCodebaseByProjectIdAndVersionTagParams) error
	DeleteCodebaseSurveys(ctx context.Context, codebaseID int64) error
	DeleteFile(ctx context.Context, id int64) error
	DeleteImport(ctx context.Context, id int64) error
	DeleteMethod(ctx context.Context, id int64) error
	DeleteModule(ctx context.Context, id int64) error
	DeleteModuleVersion(ctx context.Context, id int64) error
	DeletePackage(ctx context.Context, id int64) error
	DeletePackageType(ctx context.Context, id int64) error
	DeletePackageVersion(ctx context.Context, id int64) error
	DeleteProject(ctx context.Context, id int64) error
	DeleteProjectByName(ctx context.Context, name string) error
	DeleteSurvey(ctx context.Context, id int64) error
	DeleteSurveyModule(ctx context.Context, id int64) error
	DeleteSymbolType(ctx context.Context, id int64) error
	DeleteType(ctx context.Context, id int64) error
	DeleteVariable(ctx context.Context, id int64) error
	InsertCategory(ctx context.Context, arg InsertCategoryParams) (Category, error)
	InsertCodebase(ctx context.Context, arg InsertCodebaseParams) (Codebase, error)
	InsertFile(ctx context.Context, arg InsertFileParams) (File, error)
	InsertImport(ctx context.Context, arg InsertImportParams) (Import, error)
	InsertMethod(ctx context.Context, arg InsertMethodParams) (Method, error)
	InsertModule(ctx context.Context, name string) (Module, error)
	InsertModuleVersion(ctx context.Context, arg InsertModuleVersionParams) (ModuleVersion, error)
	InsertPackage(ctx context.Context, arg InsertPackageParams) (Package, error)
	InsertPackageType(ctx context.Context, arg InsertPackageTypeParams) (PackageType, error)
	InsertPackageVersion(ctx context.Context, arg InsertPackageVersionParams) (PackageVersion, error)
	InsertProject(ctx context.Context, arg InsertProjectParams) (Project, error)
	InsertSurvey(ctx context.Context, arg InsertSurveyParams) (Survey, error)
	InsertSurveyModule(ctx context.Context, arg InsertSurveyModuleParams) (SurveyModule, error)
	InsertSymbolType(ctx context.Context, arg InsertSymbolTypeParams) (SymbolType, error)
	InsertType(ctx context.Context, arg InsertTypeParams) (Type, error)
	InsertVariable(ctx context.Context, arg InsertVariableParams) (Variable, error)
	ListCategories(ctx context.Context) ([]Category, error)
	ListCodebaseSurveys(ctx context.Context, codebaseID int64) ([]Survey, error)
	ListCodebases(ctx context.Context) ([]Codebase, error)
	ListFiles(ctx context.Context) ([]File, error)
	ListFilesBySurvey(ctx context.Context, surveyID int64) ([]File, error)
	ListImports(ctx context.Context) ([]Import, error)
	ListMethods(ctx context.Context) ([]Method, error)
	ListModuleVersions(ctx context.Context) ([]ModuleVersion, error)
	ListModules(ctx context.Context) ([]Module, error)
	ListPackageTypes(ctx context.Context) ([]PackageType, error)
	ListPackageTypesByName(ctx context.Context) ([]PackageType, error)
	ListPackageVersions(ctx context.Context) ([]PackageVersion, error)
	ListPackages(ctx context.Context) ([]Package, error)
	ListProjects(ctx context.Context) ([]Project, error)
	ListSurveyModules(ctx context.Context) ([]SurveyModule, error)
	ListSurveys(ctx context.Context) ([]ListSurveysRow, error)
	ListSymbolTypes(ctx context.Context) ([]SymbolType, error)
	ListSymbolTypesByName(ctx context.Context) ([]SymbolType, error)
	ListTypes(ctx context.Context) ([]TypeView, error)
	ListTypesByFile(ctx context.Context, fileID int64) ([]TypeView, error)
	ListTypesBySurvey(ctx context.Context, surveyID int64) ([]TypeView, error)
	ListVariables(ctx context.Context) ([]Variable, error)
	LoadCategory(ctx context.Context, id int64) (Category, error)
	LoadCodebase(ctx context.Context, id int64) (Codebase, error)
	LoadCodebaseIDByProjectAndVersion(ctx context.Context, arg LoadCodebaseIDByProjectAndVersionParams) (int64, error)
	LoadCodebaseIdByRepoURL(ctx context.Context, repoUrl string) (int64, error)
	LoadFile(ctx context.Context, id int64) (File, error)
	LoadImport(ctx context.Context, id int64) (Import, error)
	LoadMethod(ctx context.Context, id int64) (Method, error)
	LoadModule(ctx context.Context, id int64) (Module, error)
	LoadModuleVersion(ctx context.Context, id int64) (ModuleVersion, error)
	LoadPackage(ctx context.Context, id int64) (Package, error)
	LoadPackageType(ctx context.Context, id int64) (PackageType, error)
	LoadPackageVersion(ctx context.Context, id int64) (PackageVersion, error)
	LoadProject(ctx context.Context, id int64) (Project, error)
	LoadProjectByName(ctx context.Context, name string) (Project, error)
	LoadProjectByRepoURL(ctx context.Context, repoUrl string) (Project, error)
	LoadProjectRepoURL(ctx context.Context, id int64) (string, error)
	LoadSurvey(ctx context.Context, id int64) (Survey, error)
	LoadSurveyByRepoURL(ctx context.Context, repoUrl string) (LoadSurveyByRepoURLRow, error)
	LoadSurveyModule(ctx context.Context, id int64) (SurveyModule, error)
	LoadSymbolType(ctx context.Context, id int64) (SymbolType, error)
	LoadType(ctx context.Context, id int64) (Type, error)
	LoadVariable(ctx context.Context, id int64) (Variable, error)
	UpdateCategory(ctx context.Context, arg UpdateCategoryParams) error
	UpdateCodebase(ctx context.Context, arg UpdateCodebaseParams) error
	UpdateCodebaseByProjectIdAndVersionTag(ctx context.Context, arg UpdateCodebaseByProjectIdAndVersionTagParams) error
	UpdateFile(ctx context.Context, arg UpdateFileParams) error
	UpdateImport(ctx context.Context, arg UpdateImportParams) error
	UpdateMethod(ctx context.Context, arg UpdateMethodParams) error
	UpdateModule(ctx context.Context, arg UpdateModuleParams) error
	UpdateModuleVersion(ctx context.Context, arg UpdateModuleVersionParams) error
	UpdatePackage(ctx context.Context, arg UpdatePackageParams) error
	UpdatePackageType(ctx context.Context, arg UpdatePackageTypeParams) error
	UpdatePackageVersion(ctx context.Context, arg UpdatePackageVersionParams) error
	UpdateProject(ctx context.Context, arg UpdateProjectParams) error
	UpdateProjectByName(ctx context.Context, arg UpdateProjectByNameParams) error
	UpdateSurveyModule(ctx context.Context, arg UpdateSurveyModuleParams) error
	UpdateSymbolType(ctx context.Context, arg UpdateSymbolTypeParams) error
	UpdateType(ctx context.Context, arg UpdateTypeParams) error
	UpdateVariable(ctx context.Context, arg UpdateVariableParams) error
	UpsertCategory(ctx context.Context, arg UpsertCategoryParams) (Category, error)
	UpsertCodebase(ctx context.Context, arg UpsertCodebaseParams) (Codebase, error)
	UpsertFile(ctx context.Context, arg UpsertFileParams) (File, error)
	UpsertImport(ctx context.Context, arg UpsertImportParams) (Import, error)
	UpsertModule(ctx context.Context, name string) (Module, error)
	UpsertModuleVersion(ctx context.Context, arg UpsertModuleVersionParams) (ModuleVersion, error)
	UpsertPackage(ctx context.Context, arg UpsertPackageParams) (Package, error)
	UpsertPackageType(ctx context.Context, arg UpsertPackageTypeParams) (PackageType, error)
	UpsertPackageVersion(ctx context.Context, arg UpsertPackageVersionParams) (PackageVersion, error)
	UpsertProject(ctx context.Context, arg UpsertProjectParams) (Project, error)
	UpsertSurveyModule(ctx context.Context, arg UpsertSurveyModuleParams) (SurveyModule, error)
	UpsertSymbolType(ctx context.Context, arg UpsertSymbolTypeParams) (SymbolType, error)
}
