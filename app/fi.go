package app

import (
	"github.com/mikeschinkel/gerardus/fi"
	"github.com/mikeschinkel/gerardus/logger"
	"github.com/mikeschinkel/gerardus/persister"
)

// This file is designed to be able to be generated by a go:generate CLI tool, ultimately.

type FI struct {
	fi.FI
	App       AppFI
	Persister PersisterFI
	Logger    LoggerFI
}

type AppFI struct {
	fi.FI
	Map func(Context, string, string, *App) error
}

type PersisterFI struct {
	fi.FI
	Initialize            func(Context, string, ...any) (persister.DataStore, error)
	RequestGitHubRepoInfo func(string) (*persister.RepoInfo, error)
}

type LoggerFI struct {
	fi.FI
	Initialize func(logger.Params) error
}

func AssignFI(ctx Context, new FI) FI {
	injector := fi.GetFI[FI](ctx)
	if injector.App.Map == nil {
		injector.App.Map = new.App.Map
	}
	if injector.Logger.Initialize == nil {
		injector.Logger.Initialize = new.Logger.Initialize
	}
	if injector.Persister.Initialize == nil {
		injector.Persister.Initialize = new.Persister.Initialize
	}
	if injector.Persister.RequestGitHubRepoInfo == nil {
		injector.Persister.RequestGitHubRepoInfo = new.Persister.RequestGitHubRepoInfo
	}
	return injector
}
